{
  "_args": [
    [
      "ethereumjs-vm@https://registry.npmjs.org/ethereumjs-vm/-/ethereumjs-vm-3.0.0.tgz",
      "/root/trace/node_modules/ganache-core"
    ]
  ],
  "_from": "ethereumjs-vm@https://registry.npmjs.org/ethereumjs-vm/-/ethereumjs-vm-3.0.0.tgz",
  "_id": "ethereumjs-vm@3.0.0",
  "_inCache": true,
  "_location": "/ganache-core/ethereumjs-vm",
  "_phantomChildren": {
    "bn.js": "4.11.8",
    "create-hash": "1.2.0",
    "ethjs-util": "0.1.6",
    "keccak": "1.4.0",
    "rlp": "2.2.3",
    "safe-buffer": "5.2.0",
    "secp256k1": "3.7.1"
  },
  "_requested": {
    "name": "ethereumjs-vm",
    "raw": "ethereumjs-vm@https://registry.npmjs.org/ethereumjs-vm/-/ethereumjs-vm-3.0.0.tgz",
    "rawSpec": "https://registry.npmjs.org/ethereumjs-vm/-/ethereumjs-vm-3.0.0.tgz",
    "scope": null,
    "spec": "https://registry.npmjs.org/ethereumjs-vm/-/ethereumjs-vm-3.0.0.tgz",
    "type": "remote"
  },
  "_requiredBy": [
    "/ganache-core"
  ],
  "_resolved": "https://registry.npmjs.org/ethereumjs-vm/-/ethereumjs-vm-3.0.0.tgz",
  "_shasum": "70fea2964a6797724b0d93fe080f9984ad18fcdd",
  "_shrinkwrap": null,
  "_spec": "ethereumjs-vm@https://registry.npmjs.org/ethereumjs-vm/-/ethereumjs-vm-3.0.0.tgz",
  "_where": "/root/trace/node_modules/ganache-core",
  "author": {
    "email": "mjbecze@gmail.com",
    "name": "mjbecze"
  },
  "bugs": {
    "url": "https://github.com/ethereumjs/ethereumjs-vm/issues"
  },
  "contributors": [
    {
      "name": "Alex Beregszaszi",
      "email": "alex@rtfs.hu"
    }
  ],
  "dependencies": {
    "async": "^2.1.2",
    "async-eventemitter": "^0.2.2",
    "ethereumjs-account": "^2.0.3",
    "ethereumjs-block": "~2.2.0",
    "ethereumjs-blockchain": "^3.4.0",
    "ethereumjs-common": "^1.1.0",
    "ethereumjs-util": "^6.0.0",
    "fake-merkle-patricia-tree": "^1.0.1",
    "functional-red-black-tree": "^1.0.1",
    "merkle-patricia-tree": "^2.3.2",
    "rustbn.js": "~0.2.0",
    "safe-buffer": "^5.1.1"
  },
  "description": "An Ethereum VM implementation",
  "devDependencies": {
    "babel-cli": "^6.26.0",
    "babel-preset-env": "^1.6.1",
    "browserify": "^16.2.3",
    "coveralls": "^3.0.0",
    "documentation": "^8.1.2",
    "ethereumjs-testing": "git+https://github.com/ethereumjs/ethereumjs-testing.git#v1.2.7",
    "ethereumjs-tx": "1.3.7",
    "karma": "^4.0.1",
    "karma-browserify": "^6.0.0",
    "karma-chrome-launcher": "^2.2.0",
    "karma-detect-browsers": "^2.3.3",
    "karma-firefox-launcher": "^1.1.0",
    "karma-tap": "^4.1.4",
    "level": "^4.0.0",
    "level-mem": "^3.0.1",
    "minimist": "^1.1.1",
    "nyc": "^12.0.2",
    "standard": "^10.0.0",
    "tap-spec": "^5.0.0",
    "tape": "4.6.3",
    "util.promisify": "^1.0.0"
  },
  "files": [
    "dist"
  ],
  "homepage": "https://github.com/ethereumjs/ethereumjs-vm",
  "keywords": [
    "VM",
    "ethereum"
  ],
  "license": "MPL-2.0",
  "main": "dist/index.js",
  "name": "ethereumjs-vm",
  "nyc": {
    "exclude": [
      "tests"
    ]
  },
  "optionalDependencies": {},
  "readme": "# SYNOPSIS\n\n[![NPM Package](https://img.shields.io/npm/v/ethereumjs-vm.svg?style=flat-square)](https://www.npmjs.org/package/ethereumjs-vm)\n[![Build Status](\nhttps://img.shields.io/circleci/project/github/ethereumjs/ethereumjs-vm/master.svg\n)](https://circleci.com/gh/ethereumjs/ethereumjs-vm)\n[![Coverage Status](https://img.shields.io/coveralls/ethereumjs/ethereumjs-vm.svg?style=flat-square)](https://coveralls.io/r/ethereumjs/ethereumjs-vm)\n[![Gitter](https://img.shields.io/gitter/room/ethereum/ethereumjs.svg?style=flat-square)](https://gitter.im/ethereum/ethereumjs)\n\n[![js-standard-style](https://cdn.rawgit.com/feross/standard/master/badge.svg)](https://github.com/feross/standard)\n\nImplements Ethereum's VM in Javascript.\n\n#### Fork Support\n\nThe VM currently supports the following hardfork rules:\n\n- `Byzantium`\n- `Constantinople`\n- `Petersburg` (default)\n\nIf you are still looking for a [Spurious Dragon](https://github.com/ethereum/EIPs/blob/master/EIPS/eip-607.md) compatible version of this library install the latest of the ``2.2.x`` series (see [Changelog](./CHANGELOG.md)).\n\n# INSTALL\n`npm install ethereumjs-vm`\n\n# USAGE\n```javascript\nvar VM = require('ethereumjs-vm')\n\n//create a new VM instance\nvar vm = new VM()\nvar code = '7f4e616d65526567000000000000000000000000000000000000000000000000003055307f4e616d6552656700000000000000000000000000000000000000000000000000557f436f6e666967000000000000000000000000000000000000000000000000000073661005d2720d855f1d9976f88bb10c1a3398c77f5573661005d2720d855f1d9976f88bb10c1a3398c77f7f436f6e6669670000000000000000000000000000000000000000000000000000553360455560df806100c56000396000f3007f726567697374657200000000000000000000000000000000000000000000000060003514156053576020355415603257005b335415603e5760003354555b6020353360006000a233602035556020353355005b60007f756e72656769737465720000000000000000000000000000000000000000000060003514156082575033545b1560995733335460006000a2600033545560003355005b60007f6b696c6c00000000000000000000000000000000000000000000000000000000600035141560cb575060455433145b1560d25733ff5b6000355460005260206000f3'\n\nvm.runCode({\n  code: Buffer.from(code, 'hex'), // code needs to be a Buffer\n  gasLimit: Buffer.from('ffffffff', 'hex')\n}, function(err, results){\n  console.log('returned: ' + results.return.toString('hex'));\n})\n```\nAlso more examples can be found here\n- [examples](./examples)\n- [old blog post](https://wanderer.github.io/ethereum/nodejs/code/2014/08/12/running-contracts-with-vm/)\n\n# BROWSER\n\nTo build for standalone use in the browser, install `browserify` and check [run-transactions-simple example](https://github.com/ethereumjs/ethereumjs-vm/tree/master/examples/run-transactions-simple). This will give you a global variable `EthVM` to use. The generated file will be at `./examples/run-transactions-simple/build.js`.\n\n# API\n\n## VM\n\nFor documentation on ``VM`` instantiation, exposed API and emitted ``events`` see generated [API docs](./docs/index.md).\n\n## StateManger\n\nThe API for the ``StateManager`` is currently in ``Beta``, separate documentation can be found [here](./docs/stateManager.md), see also [release notes](https://github.com/ethereumjs/ethereumjs-vm/releases/tag/v2.5.0) from the ``v2.5.0`` VM release for details on the ``StateManager`` rewrite.\n\n# Internal Structure\nThe VM processes state changes at many levels.\n\n* **runBlockchain**\n  * for every block, runBlock\n* **runBlock**\n  * for every tx, runTx\n  * pay miner and uncles\n* **runTx**\n  * check sender balance\n  * check sender nonce\n  * runCall\n  * transfer gas charges\n* **runCall**\n  * checkpoint state\n  * transfer value\n  * load code\n  * runCode\n  * materialize created contracts\n  * revert or commit checkpoint\n* **runCode**\n  * iterate over code\n  * run op codes\n  * track gas usage\n* **OpFns**\n  * run individual op code\n  * modify stack\n  * modify memory\n  * calculate fee\n\nThe opFns for `CREATE`, `CALL`, and `CALLCODE` call back up to `runCall`.\n\n\n# DEVELOPMENT\n\nDeveloper documentation - currently mainly with information on testing and debugging - can be found [here](./docs/developer.md). \n\n# LICENSE\n[MPL-2.0](https://www.mozilla.org/MPL/2.0/)\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/ethereumjs/ethereumjs-vm.git"
  },
  "scripts": {
    "build:dist": "babel lib/ -d dist/",
    "build:docs": "documentation build ./lib/index.js ./lib/runBlockchain.js ./lib/runBlock.js ./lib/runTx.js ./lib/runCode.js ./lib/runCall.js --format md --shallow > ./docs/index.md",
    "coverage": "nyc npm run coverageTests && nyc report --reporter=text-lcov > .nyc_output/lcov.info",
    "coverageTests": "tape './tests/api/**/*.js' ./tests/tester.js -s",
    "coveralls": "npm run coverage && if [ -n \"$COVERALLS_REPO_TOKEN\" ]; then coveralls <.nyc_output/lcov.info; fi",
    "formatTest": "node ./scripts/formatTest",
    "lint": "standard",
    "prepublishOnly": "npm run lint && npm run build:dist && npm run testBuildIntegrity",
    "test": "echo \"[INFO] Generic test cmd not used. See package.json for more specific test run cmds.\"",
    "testAPI": "tape './tests/api/**/*.js'",
    "testAPI:browser": "karma start karma.conf.js",
    "testBlockchain": "npm run build:dist && node --stack-size=1500 ./tests/tester -b --fork='Petersburg' --dist --excludeDir='GeneralStateTests'",
    "testBlockchainGeneralStateTests": "npm run build:dist && node --stack-size=1500 ./tests/tester -b --dist --dir='GeneralStateTests'",
    "testBuildIntegrity": "npm run build:dist && node ./tests/tester -s --dist --test='stackOverflow'",
    "testStateByzantium": "npm run build:dist && node ./tests/tester -s --fork='Byzantium' --dist",
    "testStateConstantinople": "npm run build:dist && node ./tests/tester -s --fork='Constantinople' --dist",
    "testStatePetersburg": "npm run build:dist && node ./tests/tester -s --fork='Petersburg' --dist",
    "testVM": "node ./tests/tester -v"
  },
  "standard": {
    "ignore": [
      "dist/**",
      "examples/runcode-browserify.js"
    ]
  },
  "version": "3.0.0"
}
