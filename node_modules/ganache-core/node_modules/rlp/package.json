{
  "_args": [
    [
      "rlp@https://registry.npmjs.org/rlp/-/rlp-2.2.3.tgz",
      "/root/trace/node_modules/ganache-core"
    ]
  ],
  "_from": "rlp@https://registry.npmjs.org/rlp/-/rlp-2.2.3.tgz",
  "_id": "rlp@2.2.3",
  "_inCache": true,
  "_location": "/ganache-core/rlp",
  "_phantomChildren": {},
  "_requested": {
    "name": "rlp",
    "raw": "rlp@https://registry.npmjs.org/rlp/-/rlp-2.2.3.tgz",
    "rawSpec": "https://registry.npmjs.org/rlp/-/rlp-2.2.3.tgz",
    "scope": null,
    "spec": "https://registry.npmjs.org/rlp/-/rlp-2.2.3.tgz",
    "type": "remote"
  },
  "_requiredBy": [
    "/ganache-core/eth-block-tracker/ethereumjs-util",
    "/ganache-core/eth-json-rpc-middleware/ethereumjs-account",
    "/ganache-core/eth-json-rpc-middleware/ethereumjs-util",
    "/ganache-core/eth-json-rpc-middleware/ethereumjs-vm/ethereumjs-block/ethereumjs-util",
    "/ganache-core/eth-json-rpc-middleware/ethereumjs-vm/ethereumjs-util",
    "/ganache-core/eth-sig-util/ethereumjs-abi/ethereumjs-util",
    "/ganache-core/eth-sig-util/ethereumjs-util",
    "/ganache-core/eth-tx-summary/ethereumjs-account",
    "/ganache-core/eth-tx-summary/ethereumjs-util",
    "/ganache-core/eth-tx-summary/ethereumjs-vm/ethereumjs-block/ethereumjs-util",
    "/ganache-core/eth-tx-summary/ethereumjs-vm/ethereumjs-util",
    "/ganache-core/ethashjs/ethereumjs-util",
    "/ganache-core/ethereumjs-account",
    "/ganache-core/ethereumjs-block/ethereumjs-util",
    "/ganache-core/ethereumjs-blockchain/ethereumjs-util",
    "/ganache-core/ethereumjs-tx/ethereumjs-util",
    "/ganache-core/ethereumjs-util",
    "/ganache-core/ethereumjs-vm/ethereumjs-account",
    "/ganache-core/ethereumjs-vm/ethereumjs-account/ethereumjs-util",
    "/ganache-core/merkle-patricia-tree",
    "/ganache-core/merkle-patricia-tree/ethereumjs-util",
    "/ganache-core/web3-provider-engine/ethereumjs-abi/ethereumjs-util",
    "/ganache-core/web3-provider-engine/ethereumjs-account",
    "/ganache-core/web3-provider-engine/ethereumjs-util",
    "/ganache-core/web3-provider-engine/ethereumjs-vm/ethereumjs-block/ethereumjs-util",
    "/ganache-core/web3-provider-engine/ethereumjs-vm/ethereumjs-util"
  ],
  "_resolved": "https://registry.npmjs.org/rlp/-/rlp-2.2.3.tgz",
  "_shasum": "7f94aef86cec412df87d5ea1d8cb116a47d45f0e",
  "_shrinkwrap": null,
  "_spec": "rlp@https://registry.npmjs.org/rlp/-/rlp-2.2.3.tgz",
  "_where": "/root/trace/node_modules/ganache-core",
  "author": {
    "email": "mjbecze@gmail.com",
    "name": "martin becze"
  },
  "bin": {
    "rlp": "./bin/rlp"
  },
  "bugs": {
    "url": "https://github.com/ethereumjs/rlp/issues"
  },
  "contributors": [
    {
      "name": "Alex Beregszaszi",
      "email": "alex@rtfs.hu"
    },
    {
      "name": "Holger Drewes",
      "email": "Holger.Drewes@gmail.com"
    }
  ],
  "dependencies": {
    "bn.js": "^4.11.1",
    "safe-buffer": "^5.1.1"
  },
  "description": "Recursive Length Prefix Encoding Module",
  "devDependencies": {
    "@ethereumjs/config-nyc": "^1.0.0",
    "@ethereumjs/config-prettier": "^1.0.1",
    "@ethereumjs/config-tsc": "^1.0.2",
    "@ethereumjs/config-tslint": "^1.0.0",
    "@types/bn.js": "^4.11.3",
    "@types/mocha": "^5.2.5",
    "@types/node": "^10.12.2",
    "coveralls": "^2.11.4",
    "mocha": "4.1.0",
    "nyc": "^13.1.0",
    "prettier": "^1.15.2",
    "ts-node": "^7.0.1",
    "tslint": "^5.11.0",
    "typescript": "^3.1.6",
    "typestrict": "^1.0.1"
  },
  "files": [
    "bin/**",
    "dist/**"
  ],
  "homepage": "https://github.com/ethereumjs/rlp#readme",
  "keywords": [
    "ethereum",
    "rlp"
  ],
  "license": "MPL-2.0",
  "main": "./dist/index.js",
  "name": "rlp",
  "optionalDependencies": {},
  "readme": "# SYNOPSIS\n\n[![NPM Package](https://img.shields.io/npm/v/rlp.svg?style=flat-square)](https://www.npmjs.org/package/rlp)\n[![Build Status](https://img.shields.io/travis/ethereumjs/rlp.svg?branch=master&style=flat-square)](https://travis-ci.org/ethereumjs/rlp)\n[![Coverage Status](https://img.shields.io/coveralls/ethereumjs/rlp.svg?style=flat-square)](https://coveralls.io/r/ethereumjs/rlp)\n[![Gitter](https://img.shields.io/gitter/room/ethereum/ethereumjs-lib.svg?style=flat-square)](https://gitter.im/ethereum/ethereumjs-lib) or #ethereumjs on freenode\n\n[Recursive Length](https://github.com/ethereum/wiki/wiki/RLP) Prefix Encoding for node.js.\n\n## INSTALL\n\n`npm install rlp`\n\ninstall with `-g` if you want to use the cli.\n\n## USAGE\n\n```javascript\nvar RLP = require('rlp')\nvar assert = require('assert')\n\nvar nestedList = [[], [[]], [[], [[]]]]\nvar encoded = RLP.encode(nestedList)\nvar decoded = RLP.decode(encoded)\nassert.deepEqual(nestedList, decoded)\n```\n\n## API\n\n`rlp.encode(plain)` - RLP encodes an `Array`, `Buffer` or `String` and returns a `Buffer`.\n\n`rlp.decode(encoded, [skipRemainderCheck=false])` - Decodes an RLP encoded `Buffer`, `Array` or `String` and returns a `Buffer` or an `Array` of `Buffers`. If `skipRemainderCheck` is enabled, `rlp` will just decode the first rlp sequence in the buffer. By default, it would throw an error if there are more bytes in Buffer than used by rlp sequence.\n\n## CLI\n\n`rlp decode <hex string>`  \n`rlp encode <json String>`\n\n## TESTS\n\nTest uses mocha. To run tests and linting: `npm test`. To auto fix linting problems use: `npm run test:fix`.\n\n## CODE COVERAGE\n\nInstall dev dependencies\n`npm install`\n\nRun\n`npm run coverage`\n\nThe results are at\n`coverage/lcov-report/index.html`\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/ethereumjs/rlp.git"
  },
  "scripts": {
    "build": "tsc -p ./tsconfig.prod.json",
    "coverage": "nyc mocha --reporter spec --require ts-node/register test/*.spec.ts",
    "coveralls": "npm run coverage && nyc report --reporter=text-lcov | coveralls",
    "format": "prettier --list-different **/*.{ts,json,md,gql}",
    "format:fix": "prettier --write **/*.{ts,json,md,gql}",
    "lint": "npm run format && npm run tslint && npm run tsc",
    "lint:fix": "npm run format:fix && npm run tslint:fix && npm run tsc",
    "prepublishOnly": "npm run test && npm run build",
    "test": "npm run lint && npm run unitTests",
    "test:fix": "npm run lint:fix && npm run unitTests",
    "tsc": "tsc --noEmit",
    "tslint": "tslint -p ./tsconfig.json -e node_modules/**/* -e **/node_modules/**/* -e dist/**/* **/*.ts",
    "tslint:fix": "tslint --fix --format stylish -p ./tsconfig.json -e node_modules/**/* -e **/node_modules/**/* -e dist/**/* **/*.ts",
    "unitTests": "mocha --reporter spec --require ts-node/register test/*.spec.ts",
    "webtest": "browserify test/max.js | testling -u"
  },
  "testling": {
    "browsers": [
      "android-browser/latest",
      "chrome/22..latest",
      "firefox/16..latest",
      "ipad/6",
      "iphone/6",
      "opera/11.0..latest",
      "safari/latest"
    ],
    "files": "test/*.js",
    "harness": "mocha-bdd"
  },
  "types": "./dist/index.d.ts",
  "version": "2.2.3"
}
